{
    "cells": [
        {
            "language": "javascript",
            "source": [
                "'use strict';\n\nconst fs = require('fs');\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', function(inputStdin) {\n    inputString += inputStdin;\n});\n\n// process.stdin.on('end', function() {\n//     inputString = inputString.split('\\n');\n\n//     main();\n// });\n\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\n/*\n * Complete the 'birthdayCakeCandles' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts INTEGER_ARRAY candles as parameter.\n */\n\nfunction birthdayCakeCandles(candles) {\n    // Write your code here   \n    \n    let max = 0;\n    let counter = 0;    \n    candles.forEach(item => {      \n        if (item > max) {\n           \n            max = item;\n            counter = 1;            \n        } else if (item === max) {\n            counter++;\n        }\n    });\n\n    return counter;\n}\n\n\n\nfunction main() {\n    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);\n\n    const candlesCount = parseInt(readLine().trim(), 10);\n\n    const candles = readLine().replace(/\\s+$/g, '').split(' ').map(candlesTemp => parseInt(candlesTemp, 10));\n\n    const result = birthdayCakeCandles(candles);\n\n    ws.write(result + '\\n');\n\n    ws.end();\n}\n"
            ],
            "outputs": []
        }
    ]
}